name: goodwalls-app publish

on:
  push:
    tags:
      - v*.*.*
    branches:
      - main
  pull_request:
    branches:
      - main  

permissions:
  contents: write
  packages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
  ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
  ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  ANDROID_KEYSTORE_FILENAME: "./goodwalls.jks"

  FIREBASE_JSON_SSL_KEY: ${{ secrets.FIREBASE_JSON_SSL_KEY }}
  FIREBASE_JSON_SSL_IV: ${{ secrets.FIREBASE_JSON_SSL_IV }}

  WORKING_DIRECTORY: "${{ github.workspace }}/android_app"
  FIREBASE_JSON_PATH: "${{ github.workspace }}/android_app/app"
  APK_OUTPUT_PATH: "${{ github.workspace }}/android_app/app/build/outputs/apk/release"  
  AAB_OUTPUT_PATH: "${{ github.workspace }}/android_app/app/build/outputs/bundle/release"
  GIT_TAG: ${{ github.ref_name }}
  
jobs:
  build:
    name: Build and Release App
    if: |
      !(
        startsWith(github.event.head_commit.message, 'chore:') ||
        startsWith(github.event.head_commit.message, 'GITBOOK-GoodwallsDocs')
      )
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }} # Set the working directory for all steps in this job
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v4

      - name: Setup JAVA 21 
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Android SDK       
        uses: android-actions/setup-android@v3

      - name: Check Andorid SDK and add APKSIGNER to PATH
        run: |
          yes | sdkmanager 'platforms;android-35' 'build-tools;35.0.0' || { echo "sdkmanager failed. Check above logs for errors."; exit 1; }

          # Find the exact directory where apksigner executable resides
          APKSIGNER_DIR=$(find "${ANDROID_HOME}/build-tools/" -name "apksigner" -type f -print -quit | xargs dirname)
          
          # Add this build-tools directory to the PATH for subsequent steps
          echo "PATH=$PATH:$APKSIGNER_DIR" >> $GITHUB_ENV

      - name: Decrypt keystore
        run: |
          cd app
          openssl aes-256-cbc -K ${{ env.FIREBASE_JSON_SSL_KEY }} -iv ${{ env.FIREBASE_JSON_SSL_IV }} -in ${{ env.FIREBASE_JSON_PATH }}/google-services.json.enc -out ${{ env.FIREBASE_JSON_PATH }}/google-services.json -d
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Release APK
        run: gradle assembleRelease --scan

      - name: Build Release AAB
        run: gradle bundleRelease --scan
     
      - name: Sign APK with Apksigner
        run: |
          # If your keypass is different from storepass, you'll need ANDROID_KEY_PASSWORD secret for it.
          apksigner sign --ks "${{ env.ANDROID_KEYSTORE_FILENAME }}"  --ks-pass pass:"${{ env.ANDROID_KEYSTORE_PASSWORD }}"  --ks-key-alias ${{ env.ANDROID_KEY_ALIAS }}  --key-pass pass:"${{ env.ANDROID_KEY_PASSWORD }}" ${{ env.APK_OUTPUT_PATH }}/*.apk

           
      - name: Sign AAB with Jarsigner
        run: |
          # If your keypass is different from storepass, you'll need ANDROID_KEY_PASSWORD secret for it.
          jarsigner -keystore "${{ env.ANDROID_KEYSTORE_FILENAME }}" --storepass "${{ env.ANDROID_KEYSTORE_PASSWORD }}" ${{ env.AAB_OUTPUT_PATH }}/*.aab ${{ env.ANDROID_KEY_ALIAS }}


      - name: Rename release files with tag name or snapshot
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            NAME="goodwalls-${{ env.GIT_TAG }}"
          else
            NAME="goodwalls-snapshot"
          fi
          mv ${{ env.APK_OUTPUT_PATH }}/app-release-unsigned.apk ${{ env.APK_OUTPUT_PATH }}/${NAME}.apk
          mv ${{ env.AAB_OUTPUT_PATH }}/app-release.aab ${{ env.AAB_OUTPUT_PATH }}/${NAME}.aab
          

      - name: GitHub release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          draft : false
          make_latest: false
          generate_release_notes: true
          tag_name: Snapshot
          files: |
            ${{ env.APK_OUTPUT_PATH }}/*.apk
            ${{ env.AAB_OUTPUT_PATH }}/*.aab


      - name: GitHub release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v*.*.*')
        uses: softprops/action-gh-release@v2
        with:
          draft : false
          make_latest: true
          generate_release_notes: true
          files: |
            ${{ env.APK_OUTPUT_PATH }}/*.apk
            ${{ env.AAB_OUTPUT_PATH }}/*.aab